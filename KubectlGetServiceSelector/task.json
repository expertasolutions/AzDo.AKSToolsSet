{
    "id": "d5993d3d-371f-4d89-b871-5d12484274c6",
    "name": "KubectlGetServiceSelector",
    "friendlyName": "Get Pod service selectors",
    "description": "Extract Pod Service Selectors from Kubernetes Cluster",
    "helpMarkDown": "",
    "preview": true,
    "category": "Utility",
    "visibility": [
        "Release"
    ],
    "author": "Solutions Experta Inc.",
    "version": {
        "Major": "__major__",
        "Minor": "__minor__",
        "Patch": "__patch__"
    },
    "demands": [],
    "instanceNameFormat": "Kubectl Get Service Selector value",
    "groups": [
        {
            "name": "kubernetesCluster",
            "displayName": "Kubernetes target",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "azureSubscriptionEndpoint",
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "helpMarkDown": "Select the Azure Resource Manager subscription, which contains Azure Container Registry.Note: To configure new service connection, select the Azure subscription from the list and click 'Authorize'. If your subscription is not listed or if you want to use an existing Service Principal, you can setup an Azure service connection using 'Add' or 'Manage' button.",
            "defaultValue": "",
            "required": true
        },
        {
            "name": "containerAzureResourceGroup",
            "label": "Target Container Resource group",
            "type": "pickList",
            "helpMarkDown": "",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "groupName": "kubernetesCluster"
        },
        {
            "name": "kubernetesCluster",
            "type": "pickList",
            "label": "Target Container",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "",
            "properties": {
                "EditableOptions": "True"
            },
            "groupName" : "kubernetesCluster"
        },
        {
            "name": "targetService",
            "type": "string",
            "label": "Pod Service name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "",
            "groupName" : "kubernetesCluster"
        },
        {
            "name":"targetSelectorName",
            "type": "string",
            "label": "Selector Tag name",
            "default": "",
            "required": true,
            "groupName": "kubernetesCluster"
        }

    ],
    "dataSourceBindings": [
        {
            "target": "containerAzureResourceGroup",
            "endpointId": "$(azureSubscriptionEndpoint)",
            "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{{{ #extractResource id resourcegroups}}}"
        },
        {
            "target": "kubernetesCluster",
            "endpointId": "$(azureSubscriptionEndpoint)",
            "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(containerAzureResourceGroup)/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{{{name}}}"
        }
    ],
    "outputVariables": [
        { "name": "selectorValue" }, 
        { "name": "serviceExists" }
    ],
    "execution": {
        "Node": {
            "target": "src//aksGetServiceSelector.js",
            "argumentFormat": ""
        }
      },
    "messages": {
        "CantDownloadAccessProfile": "Cannot download access profile/kube config file for the cluster %s. Reason %s.",
        "DownloadingClient": "Downloading kubernetes client.",
        "KubernetesClusterResourceGroup": "Kubernetes cluster %s, resource group %s.",
        "CreatingSecret": "Executing create %s secret.",
        "DeleteSecret": "Executing delete %s secret",
        "CreatingConfigMap": "Executing create %s configmap.",
        "DeleteConfigMap": "Executing delete %s configmap",
        "ConfigMapExists": "ConfigMap %s already exists",
        "GetConfigMap": "Executing get %s configmap",
        "DockerRegistryConnectionNotSpecified": "Docker Registry service connection details not specified",
        "FileNotFoundException": "Can not find file at location: %s",
        "DownloadingKubeCtlFromUrl": "Downloading Kubectl from URL: %s",
        "DownloadPathForStableTxt": "Download path for stable.txt: %s",
        "DownloadKubeCtlFailed": "Can not download the kubectl client of version %s. Check if the version is correct https://github.com/kubernetes/kubernetes/releases",
        "DownloadStableVersionFailed": "Can not download kubernetes stable version file from %s. Falling back to %s",
        "UsingLatestStableVersion": "Invalid version 1.7 specified in Version Spec input. Using latest stable version instead. Check for correct versions https://github.com/kubernetes/kubernetes/releases",
        "NotAValidSemverVersion": "Version not specified in correct format. E.g: 1.8.2, v1.8.2, 2.8.2, v2.8.2.",
        "ConfigurationFileNotFound": "No configuration file matching %s was found.",
        "KubernetesServiceConnectionNotFound": "Kubernetes service connection details not found.",
        "OutputVariableDataSizeExceeded": "Output variable not set as kubectl command output exceeded the maximum supported length. Output length: %s, Maximum supported length: %s"
    }
}